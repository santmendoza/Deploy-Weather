{"version":3,"sources":["Components/Weatherinfo.js","Components/WeatherForm.js","App.js","reportWebVitals.js","index.js","keys.js"],"names":["WeatherInfo","props","console","log","error","className","temperature","city","country","description","humidity","wind_speed","WeatherForm","onSubmit","getWeather","type","name","placeholder","autoFocus","App","state","e","a","preventDefault","target","elements","City","Country","cityValue","value","countryValue","API_URL","WEATHER_KEY","fetch","response","json","data","setState","main","temp","weather","wind","speed","sys","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAqCeA,EAlCK,SAAAC,GAGhB,OADAC,QAAQC,IAAIF,GAEZ,gCACKA,EAAMG,OACP,qBAAKC,UAAU,qBAAf,SACI,4BAAIJ,EAAMG,UAKVH,EAAMK,YACN,8BACgB,sBAAKD,UAAU,iBAAf,UACR,2CACeJ,EAAMM,KADrB,KAC6BN,EAAMO,WAEnC,8CACkBP,EAAMK,YADxB,WAC0CL,EAAMQ,eAEhD,2CAAcR,EAAMS,YACpB,6CAAgBT,EAAMU,mBAK9B,qBAAKN,UAAW,iBAAhB,SACI,sDCbDO,EAjBI,SAAAX,GAAK,OACxB,qBAAKI,UAAU,iBAAf,SAEQ,uBAAMQ,SAAUZ,EAAMa,WAAtB,UACI,qBAAKT,UAAU,aAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,OAAOC,YAAY,kBAC3CZ,UAAU,eAAea,WAAS,MAEtC,qBAAKb,UAAU,aAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,UAAUC,YAAY,qBAC9CZ,UAAU,mBAEd,wBAAQA,UAAW,4BAAnB,+B,OCkDGc,E,4MArDbC,MAAO,CACLd,YAAa,GACbG,YAAa,GACbC,SAAU,GACVC,WAAY,GACZJ,KAAM,GACNC,QAAQ,GACRJ,MAAO,M,EAGXU,W,uCAAa,WAAMO,GAAN,6BAAAC,EAAA,yDACXD,EAAEE,iBADS,EAEYF,EAAEG,OAAOC,SAAzBC,EAFI,EAEJA,KAAMC,EAFF,EAEEA,QACPC,EAAYF,EAAKG,MACjBC,EAAcH,EAAQE,OAEvBD,IAAaE,EANP,wBAQCC,EARD,2DAQ8DH,EAR9D,YAQ2EE,EAR3E,kBAQiGE,cARjG,0BASiBC,MAAMF,GATvB,cASCG,EATD,iBAUcA,EAASC,OAVvB,QAUCC,EAVD,OAaL,EAAKC,SAAS,CACZ/B,YAAa8B,EAAKE,KAAKC,KACvB9B,YAAa2B,EAAKI,QAAQ,GAAG/B,YAC7BC,SAAU0B,EAAKE,KAAK5B,SACpBC,WAAYyB,EAAKK,KAAKC,MACtBnC,KAAM6B,EAAKpB,KACXR,QAAS4B,EAAKO,IAAInC,QAClBJ,MAAO,OApBJ,wBAwBP,EAAKiC,SAAS,CAACjC,MAAO,oCAxBf,4C,kGA4BX,WACE,OAAO,qBAAKC,UAAU,gBAAf,SACL,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,cAAC,EAAD,CAAaS,WAAY8B,KAAK9B,aAC9B,cAAC,EAAD,eAAiB8B,KAAKxB,mB,GA9ClByB,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,gBChBAc,EAAOC,QAAS,CAEZ7B,YAAY,sC","file":"static/js/main.a6508d4a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst WeatherInfo = props => {\r\n\r\n    console.log(props)\r\n    return (\r\n    <div>\r\n        {props.error && \r\n        <div className=\"alert alert-danger\">\r\n            <p>{props.error}</p>\r\n        </div>\r\n        }\r\n\r\n        { \r\n            props.temperature ?\r\n            <div>\r\n                            <div className=\"card card-body\">\r\n                    <p>\r\n                        Location: {props.city}, {props.country}\r\n                    </p>\r\n                    <p>\r\n                        Temperature: {props.temperature} Â°C, {props.description}\r\n                    </p>\r\n                    <p>Humidity: {props.humidity}</p>\r\n                    <p>Wind Speed: {props.wind_speed}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            :\r\n            <div className= \"card card-body\">\r\n                <p> No Request yet</p>\r\n            </div>\r\n        }\r\n    </div>\r\n    )\r\n} \r\nexport default WeatherInfo; ","import React from 'react';\r\nconst WeatherForm= props => (\r\n<div className=\"card card-body\">\r\n        \r\n        <form onSubmit={props.getWeather}>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" name=\"City\" placeholder=\" Your City Name\" \r\n                className=\"form-control\" autoFocus />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" name=\"Country\" placeholder=\" Your Country Name\" \r\n                className=\"form-control\"/>\r\n            </div>\r\n            <button className= \"btn btn-success btn-block\">Get Weather</button>\r\n        </form>\r\n\r\n</div>\r\n);\r\nexport default WeatherForm;","import './App.css';\nimport WeatherInfo from './Components/Weatherinfo';\nimport WeatherForm from './Components/WeatherForm';\nimport React, { Component } from \"react\"\nimport {WEATHER_KEY} from './keys';\n\n\nclass App extends Component {\n\n\n  state= {\n    temperature: '',\n    description: '',\n    humidity: '',\n    wind_speed: '',\n    city: '',\n    country:'',\n    error: null\n  };\n\ngetWeather = async e => {\n  e.preventDefault();\n  const {City, Country}= e.target.elements;\n  const cityValue = City.value;\n  const countryValue= Country.value;\n\n    if(cityValue && countryValue){\n\n        const API_URL= `http://api.openweathermap.org/data/2.5/weather?q=${cityValue},${countryValue}&appid=${WEATHER_KEY}&units=metric`;\n        const response =await fetch(API_URL);\n        const data = await response.json();\n        // ver datos console.log(this.state)\n        \n        this.setState({\n          temperature: data.main.temp,\n          description: data.weather[0].description,\n          humidity: data.main.humidity,\n          wind_speed: data.wind.speed,\n          city: data.name,\n          country: data.sys.country,\n          error: null\n        });\n        /*, ()=> console.log(this.state));*/\n    } else{\n      this.setState({error: 'Please Enter a City and Country'})\n    }\n}\n\n  render() {\n    return <div className=\"container p-4\">\n      <div className=\"row\">\n          <div className=\"cold-md-6 mx-auto\">\n              <WeatherForm getWeather={this.getWeather}/>\n              <WeatherInfo {...this.state}/>\n          </div>\n      </div>\n  </div>\n\n\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports= {\r\n\r\n    WEATHER_KEY: `d9cd173a432ab0ea0b335de2e6393fb6`\r\n}"],"sourceRoot":""}